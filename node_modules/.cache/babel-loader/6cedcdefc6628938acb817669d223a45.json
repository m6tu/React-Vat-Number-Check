{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karlmotlik\\\\Desktop\\\\Proge\\\\ReactApi\\\\my-app\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport { Button } from 'reactstrap';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      visible: false,\n      // Kasutame value, et saada inputist tekst kätte\n      inputData: null\n    };\n  } //Input logic\n\n\n  handleInputChange(event) {\n    eent.setState({\n      value: event.target.value\n    });\n    event.preventDefault();\n  } //Input logic\n\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  componentDidMount() {\n    var apiURL = \"https://vat.erply.com/numbers?vatNumber=\";\n    var idLookUp = \"EE100247019\";\n    fetch(apiURL + idLookUp).then(res => res.json()).then(json => {\n      this.setState({\n        isLoaded: true,\n        items: json\n      });\n    });\n  }\n\n  generateItem() {\n    var _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        items = _this$state.items;\n\n    if (this.state.visible) {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, Object.keys(items).map(key => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, key, \": \", items[key])));\n    } else {\n      return React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Click the button to Fetch Data\");\n    }\n  }\n\n  render() {\n    var _this$state2 = this.state,\n        isLoaded = _this$state2.isLoaded,\n        items = _this$state2.items;\n    const inputData = this.state.inputData;\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Loading data...\");\n    } else {\n      return React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Requested data: \", inputData), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"ID: \"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Select item by ID\",\n        name: \"inputData\",\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"primary\",\n        onClick: () => this.setState({\n          visible: true\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Click Me\"), ' ', this.generateItem())));\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\karlmotlik\\Desktop\\Proge\\ReactApi\\my-app\\src\\App.js"],"names":["React","Button","App","Component","constructor","props","state","items","isLoaded","visible","inputData","handleInputChange","event","eent","setState","value","target","preventDefault","handleSubmit","alert","componentDidMount","apiURL","idLookUp","fetch","then","res","json","generateItem","Object","keys","map","key","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { Button } from 'reactstrap';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      visible: false,\n      // Kasutame value, et saada inputist tekst kätte\n      inputData: null,\n    };\n  }\n  //Input logic\n  handleInputChange(event) {\n    eent.setState({value: event.target.value});\n    event.preventDefault()\n\n  }\n  \n  //Input logic\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n\n  componentDidMount() {\n    var apiURL = \"https://vat.erply.com/numbers?vatNumber=\";\n    var idLookUp = \"EE100247019\";\n    fetch(apiURL + idLookUp)\n      .then(res => res.json())\n      .then(json => {\n        this.setState({\n          isLoaded: true,\n          items: json,\n        })\n      });\n  }\n\n  generateItem() {\n    var {isLoaded, items} = this.state;\n    if (this.state.visible) {\n      return (<ul>\n        {Object.keys(items).map(key => \n          <li>\n            {key}: {items[key]}           \n          </li>)}\n        </ul>)\n    } else {\n      return <h4>Click the button to Fetch Data</h4>\n    }\n    \n  }\n\n\n\n  render() {\n    var {isLoaded, items} = this.state;\n    const {inputData} = this.state;\n    if(!isLoaded) {\n      return <div>Loading data...</div>;\n    } else {\n      return (\n        <div className=\"App-header\">\n          <div>\n            <p>Requested data: {inputData}</p>\n            <form onSubmit={this.handleSubmit}>\n              <label>ID: </label>\n                <input type=\"text\" placeholder=\"Select item by ID\" name=\"inputData\" onChange={this.handleInputChange}>\n                </input>\n                <Button color=\"primary\" onClick={() => this.setState({visible: true})}>Click Me</Button>{' '}\n                {this.generateItem()}\n              \n            </form>\n          </div>\n            {/* kuvab listina datat\n             <ul>\n            {Object.keys(items).map(key => \n              <li>\n                {key}: {items[key]}           \n              </li>)}\n            </ul> */}\n        </div>\n      );\n    }\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}